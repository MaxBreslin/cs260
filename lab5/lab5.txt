int countR(node * head) {
    static node * head_ptr = head;

    if (head->next == head_ptr) {
        return 1;
    }

    return 1 + countR(head->next);
}

int sumR(node * head) {
    static node * head_ptr = head;

    if (head->next == head_ptr) {
        return head->next->data;
    }

    return head->data + sumR(head->next);
}

Here is the original list: 2 -> 45 -> 59 -> 63 -> 51 -> 72 -> 46 -> 15 -> 17 -> 2 -> 16 -> 85 -> 67 -> 68 -> 47 -> 82 -> 74 -> 19 -> 51 -> 2

This list contains 20 number of items 
iterative count: 20
recursive count: 20
iterative sum: 883
recursive sum: 883


The resulting list is... 2 -> 45 -> 59 -> 63 -> 51 -> 72 -> 46 -> 15 -> 17 -> 2 -> 16 -> 85 -> 67 -> 68 -> 47 -> 82 -> 74 -> 19 -> 51 -> 2

This list contains 20 number of items 
The sum of all data is: 883
# nodes freed: 20
